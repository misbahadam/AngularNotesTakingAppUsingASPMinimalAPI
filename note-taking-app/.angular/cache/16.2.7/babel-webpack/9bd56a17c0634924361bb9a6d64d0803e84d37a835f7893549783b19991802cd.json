{"ast":null,"code":"import API_ENDPOINTS from 'src/app/constants/APIEndpoints';\nimport HTTP_OPTIONS from 'src/app/constants/HttpOptions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/note.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@angular/common\";\nfunction NoteDeleteComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \"Note deleted!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NoteDeleteComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1, \"Failed to delete the note. Check the console for details.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NoteDeleteComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NoteDeleteComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onClickBtnDelete());\n    });\n    i0.ɵɵtext(1, \"Confirm\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let NoteDeleteComponent = /*#__PURE__*/(() => {\n  class NoteDeleteComponent {\n    constructor(noteService, httpClient, activeModal) {\n      this.noteService = noteService;\n      this.httpClient = httpClient;\n      this.activeModal = activeModal;\n      this.deleteSuccessful = false;\n      this.deleteFailed = false;\n    }\n    onClickBtnDelete() {\n      this.httpClient.delete(`${API_ENDPOINTS.DELETE_NOTE}/${this.noteToDelete.id}`, HTTP_OPTIONS).subscribe({\n        next: response => {\n          this.deleteSuccessful = true;\n          const index = this.noteService.allNotes.indexOf(this.noteToDelete);\n          if (index > -1) {\n            this.noteService.allNotes.splice(index, 1); // 2nd parameter means remove one item only\n          }\n\n          console.log('Successfully deleted the note! Response from server:');\n          console.log(response);\n        },\n        error: error => {\n          this.deleteFailed = true;\n          console.log('Failed to delete the note! Error from server:');\n          console.log(error);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function NoteDeleteComponent_Factory(t) {\n      return new (t || NoteDeleteComponent)(i0.ɵɵdirectiveInject(i1.NoteService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.NgbActiveModal));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NoteDeleteComponent,\n      selectors: [[\"app-note-delete\"]],\n      decls: 13,\n      vars: 5,\n      consts: [[1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"class\", \"text-success\", 4, \"ngIf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"btn btn-lg btn-dark\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-lg\", \"btn-outline-dark\", 3, \"click\"], [1, \"text-success\"], [1, \"text-danger\"], [\"type\", \"button\", 1, \"btn\", \"btn-lg\", \"btn-dark\", 3, \"click\"]],\n      template: function NoteDeleteComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function NoteDeleteComponent_Template_button_click_3_listener() {\n            return ctx.activeModal.dismiss(\"Cross click\");\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"p\");\n          i0.ɵɵtext(6, \"A deletion can not be reverted.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4);\n          i0.ɵɵtemplate(8, NoteDeleteComponent_p_8_Template, 2, 0, \"p\", 5);\n          i0.ɵɵtemplate(9, NoteDeleteComponent_p_9_Template, 2, 0, \"p\", 6);\n          i0.ɵɵtemplate(10, NoteDeleteComponent_button_10_Template, 2, 0, \"button\", 7);\n          i0.ɵɵelementStart(11, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function NoteDeleteComponent_Template_button_click_11_listener() {\n            return ctx.activeModal.close(\"Close click\");\n          });\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Are you sure you want to delete the note titled \\\"\", ctx.noteToDelete.title, \"\\\"?\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.deleteSuccessful);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.deleteFailed);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.deleteSuccessful === false);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.deleteSuccessful ? \"Close\" : \"Cancel\");\n        }\n      },\n      dependencies: [i4.NgIf],\n      styles: [\".container[_ngcontent-%COMP%]{margin:20px}.btn-danger[_ngcontent-%COMP%]{background-color:#dc3545;color:#fff;border:none;border-radius:3px;padding:8px 16px;cursor:pointer}.btn-danger[_ngcontent-%COMP%]:hover{background-color:#c82333}\"]\n    });\n  }\n  return NoteDeleteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}