{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport APIEndpoints from './constants/APIEndpoints';\nimport { NoteCreateComponent } from './note-create/note-create.component';\nimport { NoteEditComponent } from './note-edit/note-edit.component';\nimport { NoteDeleteComponent } from './note-delete/note-delete.component';\n//import { GoogleAnalyticsService } from 'angular-ga';\nexport let AppComponent = class AppComponent {\n  constructor(httpClient, noteService, modalService, gaService) {\n    this.httpClient = httpClient;\n    this.noteService = noteService;\n    this.modalService = modalService;\n    this.gaService = gaService;\n    this.title = 'note-taking-app';\n    this.modalOptions = {\n      size: 'lg'\n    };\n  }\n  ngOnInit() {\n    this.httpClient.get(APIEndpoints.GET_ALL_NOTES).subscribe(response => {\n      this.noteService.allNotes = response;\n      console.log(this.noteService.allNotes);\n    });\n  }\n  //trackPageView(pageName: string): void {\n  //  this.gaService.pageview;\n  //}\n  //trackEvent(eventCategory: string, eventAction: string, eventLabel: string): void {\n  //  this.gaService.event;\n  //}\n  onClickBtnCreateNewPost() {\n    this.modalService.open(NoteCreateComponent, this.modalOptions);\n    //this.trackEvent('Notes', 'Create', 'New Note Created');\n  }\n\n  onClickBtnUpdatePost(note) {\n    const modalRef = this.modalService.open(NoteEditComponent, this.modalOptions);\n    modalRef.componentInstance.noteToUpdate = note;\n    //this.trackEvent('Notes', 'Update', 'Note Updated');\n  }\n\n  onClickBtnDeletePost(note) {\n    const modalRef = this.modalService.open(NoteDeleteComponent, this.modalOptions);\n    modalRef.componentInstance.noteToDelete = note;\n    //this.trackEvent('Notes', 'Delete', 'Note Deleted');\n  }\n};\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","APIEndpoints","NoteCreateComponent","NoteEditComponent","NoteDeleteComponent","AppComponent","constructor","httpClient","noteService","modalService","gaService","title","modalOptions","size","ngOnInit","get","GET_ALL_NOTES","subscribe","response","allNotes","console","log","onClickBtnCreateNewPost","open","onClickBtnUpdatePost","note","modalRef","componentInstance","noteToUpdate","onClickBtnDeletePost","noteToDelete","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\coding task\\note-taking-app\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NoteService } from './services/note.service';\nimport { Note } from './models/note.model';\nimport APIEndpoints from './constants/APIEndpoints';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { NoteCreateComponent } from './note-create/note-create.component';\nimport { NoteEditComponent } from './note-edit/note-edit.component';\nimport { NoteDeleteComponent } from './note-delete/note-delete.component';\n//import { GoogleAnalyticsService } from 'angular-ga';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'note-taking-app';\n\n  modalOptions: NgbModalOptions = {\n    size: 'lg'\n  }\n\n\n\n  constructor(private httpClient: HttpClient, public noteService: NoteService, private modalService: NgbModal, private gaService: GoogleAnalyticsService) {}\n\n  ngOnInit(): void {\n    this.httpClient.get<Note[]>(APIEndpoints.GET_ALL_NOTES)\n      .subscribe(response => {\n        this.noteService.allNotes = response;\n        console.log(this.noteService.allNotes);\n      })\n  }\n\n  //trackPageView(pageName: string): void {\n  //  this.gaService.pageview;\n  //}\n\n  //trackEvent(eventCategory: string, eventAction: string, eventLabel: string): void {\n  //  this.gaService.event;\n  //}\n\n  onClickBtnCreateNewPost() {\n    this.modalService.open(NoteCreateComponent, this.modalOptions);\n    //this.trackEvent('Notes', 'Create', 'New Note Created');\n  }\n\n  onClickBtnUpdatePost(note: Note) {\n    const modalRef = this.modalService.open(NoteEditComponent, this.modalOptions);\n\n    modalRef.componentInstance.noteToUpdate = note;\n    //this.trackEvent('Notes', 'Update', 'Note Updated');\n  }\n\n  onClickBtnDeletePost(note: Note) {\n    const modalRef = this.modalService.open(NoteDeleteComponent, this.modalOptions);\n\n    modalRef.componentInstance.noteToDelete = note;\n    //this.trackEvent('Notes', 'Delete', 'Note Deleted');\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAGjD,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE;AASO,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EASvBC,YAAoBC,UAAsB,EAASC,WAAwB,EAAUC,YAAsB,EAAUC,SAAiC;IAAlI,KAAAH,UAAU,GAAVA,UAAU;IAAqB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IAAoB,KAAAC,SAAS,GAATA,SAAS;IAR9H,KAAAC,KAAK,GAAG,iBAAiB;IAEzB,KAAAC,YAAY,GAAoB;MAC9BC,IAAI,EAAE;KACP;EAIwJ;EAEzJC,QAAQA,CAAA;IACN,IAAI,CAACP,UAAU,CAACQ,GAAG,CAASd,YAAY,CAACe,aAAa,CAAC,CACpDC,SAAS,CAACC,QAAQ,IAAG;MACpB,IAAI,CAACV,WAAW,CAACW,QAAQ,GAAGD,QAAQ;MACpCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,WAAW,CAACW,QAAQ,CAAC;IACxC,CAAC,CAAC;EACN;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEAG,uBAAuBA,CAAA;IACrB,IAAI,CAACb,YAAY,CAACc,IAAI,CAACrB,mBAAmB,EAAE,IAAI,CAACU,YAAY,CAAC;IAC9D;EACF;;EAEAY,oBAAoBA,CAACC,IAAU;IAC7B,MAAMC,QAAQ,GAAG,IAAI,CAACjB,YAAY,CAACc,IAAI,CAACpB,iBAAiB,EAAE,IAAI,CAACS,YAAY,CAAC;IAE7Ec,QAAQ,CAACC,iBAAiB,CAACC,YAAY,GAAGH,IAAI;IAC9C;EACF;;EAEAI,oBAAoBA,CAACJ,IAAU;IAC7B,MAAMC,QAAQ,GAAG,IAAI,CAACjB,YAAY,CAACc,IAAI,CAACnB,mBAAmB,EAAE,IAAI,CAACQ,YAAY,CAAC;IAE/Ec,QAAQ,CAACC,iBAAiB,CAACG,YAAY,GAAGL,IAAI;IAC9C;EACF;CACD;;AA7CYpB,YAAY,GAAA0B,UAAA,EALxB/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW7B,YAAY,CA6CxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}